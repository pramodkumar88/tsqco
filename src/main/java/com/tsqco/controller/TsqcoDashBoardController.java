package com.tsqco.controller;

import com.angelbroking.smartapi.SmartConnect;
import com.angelbroking.smartapi.http.exceptions.SmartAPIException;
import com.tsqco.config.TsqcoConfig;
import com.tsqco.constants.TsqcoConstants;
import com.tsqco.models.AngelGainersLosers;
import com.tsqco.models.AngelMarketData;
import com.tsqco.models.AngelTotalHolding;
import com.tsqco.service.TsqcoDashBoardService;
import com.zerodhatech.kiteconnect.kitehttp.exceptions.KiteException;
import com.zerodhatech.models.Holding;
import lombok.AllArgsConstructor;
import org.json.JSONArray;
import org.json.JSONObject;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.io.IOException;
import java.text.ParseException;
import java.util.Arrays;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping(value = "/tsqco")
@AllArgsConstructor
@CrossOrigin(origins = TsqcoConstants.LOCALHOST_WEB)
public class TsqcoDashBoardController {

    private final TsqcoDashBoardService tsqcoDashBoardService;

    private final TsqcoConfig tsqcoConfig;

    @GetMapping(value = "/portfolio", produces = "application/json")
    public ResponseEntity<List<Holding>> getKitePortfolio() throws KiteException {
        List<Holding> userPortfolio = tsqcoDashBoardService.getKitePortfolio();
        return new ResponseEntity<>(userPortfolio, HttpStatus.OK);
    }

    @GetMapping(value = "/angel/portfolio", produces = "application/json")
    public ResponseEntity<AngelTotalHolding> getAngelPortfolio() throws SmartAPIException {
        AngelTotalHolding angelPortfolio = tsqcoDashBoardService.getAngelPortfolio();
        return new ResponseEntity<>(angelPortfolio, HttpStatus.OK);
    }

    @GetMapping(value="/allinstruments")
    public void getAllInstrumentsLoaded() throws KiteException, IOException {
        tsqcoDashBoardService.loadAllTheInstruments();
    }

    @GetMapping(value="/angel/loadinstruments")
    public ResponseEntity<String>  getAllAngelInstrumentsLoaded() throws SmartAPIException, InterruptedException {

        String status = tsqcoDashBoardService.loadAllAngelInstruments();

        return new ResponseEntity<>(status, HttpStatus.OK);
    }

    @PostMapping(value="/angel/marketdata")
    public ResponseEntity<AngelMarketData>  getMarketData(@RequestBody AngelMarketData marketdata) throws SmartAPIException {
        List<AngelMarketData> marketData = tsqcoDashBoardService.getMarketData(marketdata, false);
        return new ResponseEntity<>(marketData.get(0), HttpStatus.OK);
    }

    @PostMapping(value="/angel/gainers-losers")
    public ResponseEntity<List<AngelGainersLosers>> getGainersAndLosers(@RequestBody Map<String, Object> request) throws ParseException {
        String targetDate = (String) request.get("target_date");
        int topN = (int) request.get("top_n");
        boolean avgFlag = (boolean) request.get("avg");
        List<AngelGainersLosers> result = tsqcoDashBoardService.getTopGainersAndLosers(targetDate, topN, avgFlag);
        return ResponseEntity.ok(result);
    }

    @GetMapping(value = "/angel/getallequityltp")
    public void getallequityltp() throws SmartAPIException, IOException {
        String tokens = "7074,7016,7169,7109,740,7463,7553,7965,23480,8054,8477,23806,8842,874,8890,8998,24154,9046,9356,9253,9111,9385,9581,9590,9668,967,9756,9750,24610,9931,24742,24961,24909,25088,25203,25492,25756,3718,3626,3776,3744,13776,13821,13839,14003,3748,25892,3834,4299,4391,4487,4525,4568,278,5054,28714,5306,5449,5606,5688,5701,5732,28879,28906,583,595,29113,29124,6040,13106,1008,13381,2963,2970,6164,6216,3001,3048,6232,6227,641,676,6733,6596,6944,6964,3351,3329,703,7227,7196,3405,3475,7325,7422,350,3509,7508,7791,3727,3812,3799,380,7927,3918,8077,4136,8110,8124,8163,4244,436,426,445,8546,8585,8596,4598,4809,8840,8882,5068,522,9117,940,9408,9362,5359,5313,5239,5292,9683,5366,5378,5426,5610,5748,5851,5865,6125,6961,7287,7412,8341,8632,8825,8954,8962,9116,9168,9652,9678,9685,9819,9939,23693,23729,24077,24145,24159,24225,24374,24445,24461,24524,24596,24715,24861,24847,2496,2513,25597,25690,25684,25718,25744,25897,2616,27067,2708,2709,27107,2716,27176,2809,28046,28314,28378,2854,3045,11262,11301,11536,3066,30835,31163,31258,3186,3172,338,3387,3417,3607,3672,3694,385,3807,3880,3972,4394,4306,4421,4566,471,4822,4847,5108,5194,5186,526,530,5614,578,619,6297,634,6422,6848,6951,7145,7218,7242,7420,739,7390,7835,79,809,9260,9342,9305,936,9428,9539,9741,3761,3912,395,3987,4116,489,4898,4934,4992,5097,5162,5168,5204,5516,5948,6006,6068,6218,6713,6643,6858,7254,7376,7358,7451,7518,7838,7851,7862,805,8159,8311,8469,8506,8654,8614,12603,13753,13761,8866,8797,9014,9049,9309,9354,9599,22832,14677,17963,18102,1808,18142,16725,16713,21423,21427,22433,11293,11355,22566,22602,11445,11439,11435,2263,13061,13111,1313,13162,13192,1327,17271,13501,18931,19025,21247,2124,21195,1922,19233,1041,10508,10512,10568,10585,10578,14329,14398,144,17475,1797,20261,11966,14786,23175,17881,17927,25017,18049,1507,15083,15085,29050,2912,29577,29962,15146,15156,24735,2085,20822,20905,20936,20825,20854,20877,236,21113,2969,25080,2988,2997,29877,2972,308,305,6286,24969,25049,25060,9480,2421,24184,5373,24403,5428,7979,804,2979,6141,6302,6545,6606,6863,6818,6803,6782,7129,7406,24067,3103,3127,8736,6353,6600,6543,6718,6843,694,381,399,4184,2649,4204,422,7506,3499,7603,7780,7844,7936,2885,28952,2955,3024,8167,8153,822,8342,9087,916,910,926,14890,14063,25574,10285,10350,100,1011,10176,10188,10099,10,10159,10297,1038,10406,1053,10576,10579,10604,10634,10859,10905,11060,1110,11239,11255,11364,11369,11386,11407,11532,11723,1181,11829,11860,11868,11999,12026,12034,1214,12188,1232,1235,12384,1289,13143,13147,13182,13285,13288,13658,13730,13756,1412,14223,14304,14339,14418,14562,10447,10473,10515,1073,10753,10768,1100,11037,11039,11072,11195,11162,11297,11411,11423,11432,11441,11491,11522,11566,11573,1164,11647,11743,11794,1185,11817,11821,11864,11919,12009,11983,10074,10181,12015,1247,12842,13082,13086,13101,13451,13522,13572,13557,13644,13702,13794,14154,14218,1424,14385,14537,14552,1476,14771,14778,14784,14793,10217,1030,10397,14853,14908,10407,10457,10619,14924,14947,10733,1497,14977,15032,11058,11045,11065,11082,11193,11184,11220,11275,11260,1521,15254,1139,1134,11452,11457,11427,11582,11779,1547,1597,16045,11909,11892,11979,12032,1624,17032,12489,17130,17197,12533,17256,17313,17357,12686,17358,17547,17598,17851,17859,17875,17957,18011,13270,13305,13404,13430,18214,18226,18250,13580,18431,13720,18652,18659,1394,14019,18840,14086,18908,19,14236,19113,14286,14346,19322,14459,14445,14479,14511,1949,14547,1455,19496,19531,19543,104,19585,19640,19731,10791,10922,10990,10999,11253,20063,11319,11373,20196,20257,2031,11549,11591,10227,20329,10415,11634,11667,11703,10440,10453,11809,10485,11971,10530,10577,12124,12153,12219,12231,10876,10948,11050,11223,11256,11626,11593,11813,11852,11796,12848,11872,13072,11915,11975,11932,11992,12092,13376,13538,13565,13656,13688,13710,13751,13810,13920,13982,13987,1403,14014,14180,14230,14233,14278,14255,14309,14490,14518,14597,12847,14672,14712,14767,14769,14788,14774,1482,13081,1494,13211,13218,10243,1044,13236,13310,13352,10511,13359,1336,13423,13457,10557,13496,10618,10661,10700,10726,10822,10793,10865,10830,10940,10945,11006,11027,11155,11149,11236,11241,1127,11394,11377,1142,11530,11543,11580,1162,11689,11884,11842,11905,12108,12173,13560,136,13587,13611,13648,13745,1372,13725,13786,128,12863,13057,13116,13260,13290,13332,14334,13367,14423,14480,13409,20374,13528,13592,1360,13620,13625,20532,20556,21131,21254,21362,21401,21501,21683,21704,21726,2188,2202,13796,13844,13941,14064,14134,14245,22423,22488,14428,14501,14535,22717,2275,14667,1467,14657,14753,14755,14758,14781,22901,2306,14843,14871,15058,1512,15141,15229,2320,2328,15404,15360,15356,15883,14592,1630,1660,16675,16795,14742,14747,14761,16959,17044,14782,17094,17140,17187,14938,15044,1720,17433,17272,15124,15180,17520,17534,15199,17572,17616,17635,15259,17722,17778,16821,16859,16927,1835,18423,16933,18457,18566,1708,17152,18743,17295,17576,17641,17818,17833,19223,1802,17939,17903,18060,19599,1979,19795,19943,1997,20072,20086,18721,20223,18944,20242,19097,20302,19218,19211,19224,20642,19438,19578,20878,19761,2112,19877,2144,21713,21828,2029,20413,20372,20531,20616,22365,22344,2088,22428,22595,21119,2106,212,21334,21339,23027,2307,21428,21508,21705,21676,21808,21749,2176,1023,10277,10300,10417,220,10580,10633,10666,10676,10761,10825,1085,10871,10893,10925,22233,11032,10993,22415,11265,11287,1145,11471,11483,11571,11596,22824,11627,1168,11654,1186,11896,2316,12018,14627,14732,14751,14772,14889,14894,14937,15034,15179,1250,15194,15283,1530,15332,15347,15380,157,1581,16253,1270,16669,16682,12913,13,13001,16900,16908,16827,1348,13517,17351,13637,17424,17613,13801,13826,17728,17770,13890,17945,13966,13950,18026,14101,14106,1415,14194,18110,18124,14260,14366,14361,18131,18151,14440,1442,14523,18341,18359,1841,14813,14917,14952,18581,14972,14982,15039,18760,18863,18889,18962,15308,15355,15399,19020,15419,19142,16249,19196,193,19265,1628,1672,19501,16986,17022,1964,17207,19813,17388,1994,19878,17477,20092,17794,17738,17700,17795,1782,17971,20224,2028,18039,18086,20314,2048,1811,18220,20551,18232,18252,18347,1838,18553,20778,20852,18783,21001,21154,21399,19633,19631,21794,19937,21957,2004,20071,20159,2018,20560,2229,22440,14599,14582,2268,22663,22670,14618,22739,1465,14777,2283,22846,14838,14858,22930,15007,22980,23056,15067,15068,23181,15073,15136,15151,15184,15228,15266,15278,15343,10238,15362,10310,10588,10599,10690,10723,10755,15414,16123,15589,1621,16639,17010,17105,17307,17395,17507,17651,17685,11212,11233,17758,17808,11343,11351,11399,11403,11511,1805,11581,11655,18279,18268,11699,11705,11731,18321,18391,11763,11778,18479,11782,11804,11935,18755,18967,1901,19205,19235,19237,19686,19931,201,1267,203,12716,20425,20547,2056,13091,20621,13126,1315,13276,13342,13337,20831,20874,13436,21062,2107,13491,13510,13511,13536,21252,21406,21383,1363,13693,1375,21740,13750,13870,13859,13880,13900,13976,14058,1406,14068,14096,14111,22243,22239,22255,14435,14450,1448,14557,2256,14584,14607,14745,14764,14762,2277,1485,1491,14922,2289,14966,1508,2294,15119,15214,23043,23066,15219,15234,15271,15295,15342,21091,15384,21275,21392,21614,163,21623,21770,2181,16683,1681,21840,16819,16822,21986,17053,17181,17263,17400,22347,22524,17702,17675,17933,17987,18012,17999,18029,22722,18143,1826,18292,2313,18593,2331,18866,18977,10637,10693,10738,1076,10794,10831,19458,10939,19597,11271,19800,11309,11325,19933,1153,11496,11538,11547,11606,11618,11630,11677,20160,11787,11798,1174,11840,11895,1190,11956,1196,11987,1200,12000,12022,12024,2049,12101,20830,20956,12578,21238,21314,2142,21484,12841,12978,13035,21690,21750,13139,13175,13197,13198,1333,1338,13414,13577,13598,13643,13868,13816,13875,13925,22463,22477,13951,14008,22592,14116,14139,14150,14198,14296,14299,14413,14485,14707,14687,23184,14828,14900,14912,14957,15061,15129,15313,15209,23740,15337,15377,15391,15409,15420,1570,1576,24014,1593,1614,24081,1627,1633,166,1663,16658,16751,24308,2435,24398,17071,24409,17145,17186,1726,17270,24595,17279,17397,17419,1756,17541,17625,17704,24814,17752,17801,17869,18096,25222,25171,25252,25258,18118,18119,18520,18571,18564,1859,18614,1879,25672,18883,18921,19015,19036,19073,25786,25835,19126,19279,1927,19289,25941,2627,19556,19646,19705,19691,27047,27052,19783,19867,20110,20152,20178,20188,2794,20323,20321,2829,20453,20534,20607,1515,15161,3088,3099,3138,3220,3247,330,3466,3507,3530,3586,359,368,371,3906,393,3963,40,4010,419,425,4684,23512,23864,15330,154,1594,15555,24196,24292,24321,16395,16696,24386,1675,16745,16777,16913,16915,17029,24730,17062,24823,17333,17364,17438,17486,25114,17603,17747,17922,18154,1814,25640,18284,25724,18365,184,18417,25780,25800,25855,18644,18608,18562,25996,18679,18822,19084,19061,27084,19184,19234,19299,19401,19372,19410,19679,199,19913,20134,20182,20293,20296,20322,20303,2043,20698,2073,21469,21478,2168,27213,21951,27754,2783,2814,2816,2841,2866,28805,28859,2909,29135,3002,312,2259,22649,3126,22730,3150,31507,317,3339,3273,3403,3375,3384,3396,3506,22947,357,2303,3724,3772,3827,3837,3892,2319,3965,4014,23407,23402,20776,20788,23855,21174,23915,2183,21959,24366,22,24385,24404,22277,22377,24538,22521,24777,2493,22675,25328,25398,23127,23142,25584,2562,25758,23489,235,25851,25984,2636,2643,23799,27097,2717,24117,2431,24378,2442,24582,2463,24781,24809,2481,28960,28969,24944,2987,3021,25270,3022,3078,25358,25403,31234,31107,3292,3327,341,3389,25606,3432,3563,3579,3676,2610,3757,3980,2705,27061,27075,27079,4041,4410,4656,4668,467,4693,4747,4751,4838,4907,4986,509,28125,5279,2859,5407,5475,28888,5633,29284,29598,29553,6385,31181,3129,324,6445,6568,3426,34,3546,6711,6836,685,6908,7,7030,7048,7053,7083,7105,714,722,23650,7229,7276,7401,742,2385,2388,7929,8003,7982,811,24231,24265,827,24532,24533,2454,8413,857,8696,24851,24856,8953,928,9576,25134,25262,981,9917,25426,25468,25626,25725,25918,2614,27037,27095,27297,27334,27353,277,2837,28662,2868,2998,30023,30089,3018,30392,31138,3316,3345,335,3482,3456,3608,4055,23446,23447,2350,4378,4481,23590,4529,4594,495,23804,2412,5142,24226,5507,245,5578,2475,5911,5926,2489,24948,6198,628,637,6446,25235,25447,6579,6663,6656,25807,25872,6705,6792,6913,25977,2598,6943,6994,263,701,7177,27066,27144,27171,7200,7353,7361,275,7456,7457,2792,27839,2844,28764,28847,772,2939,3010,30108,8119,8182,31415,31468,31837,3252,8529,3324,3291,3435,3496,3637,3787,3857,3821,4007,881,8828,4235,438,919,4749,4732,4587,477,9641,9552,48,9862,9810,5220,5143,5264,5265,993,527,5382,5352,5585,559,5631,5751,5782,592,6018,7339,7374,757,760,7672,7679,781,7852,8083,8024,817,8175,8304,8510,8944,9039,9219,913,937,9422,9553,955,9592,9667,9847,9902,2354,23607,23553,23621,4717,474,4745,480,4911,4963,4973,2397,24025,2406,24190,24217,5394,5385,5401,5501,5900,24798,5957,24870,6066,2492,25,25073,6278,25162,2514,25178,6364,6462,25312,6673,2535,25392,25643,25844,25907,715,2645,2664,2606,2687,270,27008,2739,7880,27969,7942,2799,8050,8075,8080,8146,8132,29008,8479,30125,3009,3063,896,8968,3363,3237,342,3411,3518,3481,3703,9348,3715,3721,3736,9617,958,3766,3813,383,404,4040,4064,4067,9879,4176,4221,9897,4344,4279,9921,4491,4522,4503,4843,4892,4957,513";
        getMarketDataBatch(tsqcoConfig.getSmartConnect(), tokens);
    }

    public void getMarketDataBatch(SmartConnect smartConnect, String tokensString) throws SmartAPIException, IOException {
        // Split the string into individual tokens and convert to a List
        List<String> tokens = Arrays.asList(tokensString.split(",\\s*"));

        JSONObject aggregatedMarketData = new JSONObject();

        // Define batch size
        int batchSize = 50;

        for (int i = 0; i < tokens.size(); i += batchSize) {
            List<String> batch = tokens.subList(i, Math.min(i + batchSize, tokens.size()));

            // Create payload for the batch
            JSONObject payload = new JSONObject();
            payload.put("mode", "LTP");
            JSONObject exchangeTokens = new JSONObject();
            JSONArray nseTokens = new JSONArray(batch);
            exchangeTokens.put("NSE", nseTokens);
            payload.put("exchangeTokens", exchangeTokens);

            // Send the batch request
            JSONObject response = smartConnect.marketData(payload);

            // Merge response data into aggregatedMarketData
            for (String key : response.keySet()) {
                aggregatedMarketData.put(key, response.get(key));
            }
        }

        // Print or use the aggregated data
        System.out.println("Aggregated Market Data: " + aggregatedMarketData.toString());
    }

}

